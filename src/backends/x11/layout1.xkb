xkb_keymap {
xkb_keycodes {
    minimum = 8;
    maximum = 255;
     <ESC> = 9;
    <AE01> = 10;
    <AE02> = 11;
    <AE03> = 12;
    <AE04> = 13;
    <AE05> = 14;
    <AE06> = 15;
    <AE07> = 16;
    <AE08> = 17;
    <AE09> = 18;
    <AE10> = 19;
    <AE11> = 20;
    <AE12> = 21;
    <BKSP> = 22;
     <TAB> = 23;
    <AD01> = 24;
    <AD02> = 25;
    <AD03> = 26;
    <AD04> = 27;
    <AD05> = 28;
    <AD06> = 29;
    <AD07> = 30;
    <AD08> = 31;
    <AD09> = 32;
    <AD10> = 33;
    <AD11> = 34;
    <AD12> = 35;
    <RTRN> = 36;
    <LCTL> = 37;
    <AC01> = 38;
    <AC02> = 39;
    <AC03> = 40;
    <AC04> = 41;
    <AC05> = 42;
    <AC06> = 43;
    <AC07> = 44;
    <AC08> = 45;
    <AC09> = 46;
    <AC10> = 47;
    <AC11> = 48;
    <TLDE> = 49;
    <LFSH> = 50;
    <BKSL> = 51;
    <AB01> = 52;
    <AB02> = 53;
    <AB03> = 54;
    <AB04> = 55;
    <AB05> = 56;
    <AB06> = 57;
    <AB07> = 58;
    <AB08> = 59;
    <AB09> = 60;
    <AB10> = 61;
    <RTSH> = 62;
    <KPMU> = 63;
    <LALT> = 64;
    <SPCE> = 65;
    <CAPS> = 66;
    <FK01> = 67;
    <FK02> = 68;
    <FK03> = 69;
    <FK04> = 70;
    <FK05> = 71;
    <FK06> = 72;
    <FK07> = 73;
    <FK08> = 74;
    <FK09> = 75;
    <FK10> = 76;
    <NMLK> = 77;
    <SCLK> = 78;
     <KP7> = 79;
     <KP8> = 80;
     <KP9> = 81;
    <KPSU> = 82;
     <KP4> = 83;
     <KP5> = 84;
     <KP6> = 85;
    <KPAD> = 86;
     <KP1> = 87;
     <KP2> = 88;
     <KP3> = 89;
     <KP0> = 90;
    <KPDL> = 91;
    <FK11> = 95;
    <FK12> = 96;
    <KPEN> = 104;
    <RCTL> = 105;
    <KPDV> = 106;
    <PRSC> = 107;
    <RALT> = 108;
    <HOME> = 110;
      <UP> = 111;
    <PGUP> = 112;
    <LEFT> = 113;
    <RGHT> = 114;
     <END> = 115;
    <DOWN> = 116;
    <PGDN> = 117;
     <INS> = 118;
    <DELE> = 119;
    <PAUS> = 127;
    <LWIN> = 133;
    <RWIN> = 134;
    <MENU> = 147;
};

xkb_types {

    type "ONE_LEVEL" {
        modifiers= none;
    };
    type "TWO_LEVEL" {
        modifiers= Shift;
        map[Shift]= Level2;
    };
    type "ALPHABETIC" {
        modifiers= Shift+Lock;
        map[Shift]= Level2;
        map[Lock]= Level2;
    };
    type "KEYPAD" {
        modifiers= Shift+Mod3;
        map[Shift]= Level2;
        map[Mod3]= Level2;
    };
    type "FOUR_LEVEL" {
        modifiers= Shift+Mod2;
        map[Shift]= Level2;
        map[Mod2]= Level3;
        map[Shift+Mod2]= Level4;
    };
    type "FOUR_LEVEL_SEMIALPHABETIC" {
        modifiers= Shift+Lock+Mod2;
        map[Shift]= Level2;
        map[Lock]= Level2;
        map[Mod2]= Level3;
        map[Shift+Mod2]= Level4;
        map[Lock+Mod2]= Level3;
        preserve[Lock+Mod2]= Lock;
        map[Shift+Lock+Mod2]= Level4;
        preserve[Shift+Lock+Mod2]= Lock;
    };
};

xkb_compatibility {

    interpret.useModMapMods= AnyLevel;
    interpret.repeat= False;
    interpret.locking= False;
    interpret Num_Lock+AnyOfOrNone(all) {
        action= LockMods(modifiers=Mod3);
    };
    interpret ISO_Level3_Shift+AnyOfOrNone(all) {
        action= SetMods(modifiers=Mod2);
    };
    interpret Alt_L+AnyOfOrNone(all) {
        action= SetMods(modifiers=Mod1);
    };
    interpret Alt_R+AnyOfOrNone(all) {
        action= SetMods(modifiers=Mod1);
    };
    interpret Shift_L+AnyOfOrNone(all) {
        action= SetMods(modifiers=Shift);
    };
    interpret Shift_R+AnyOfOrNone(all) {
        action= SetMods(modifiers=Shift);
    };
    interpret Caps_Lock+AnyOfOrNone(all) {
        action= LockMods(modifiers=Lock);
    };
};

xkb_symbols {

    key  <ESC> {         [          Escape ] };
    key <AE01> {
        symbols[Group1]= [               1,          exclam ],
        symbols[Group2]= [       ampersand,               1 ]
    };
    key <AE02> {
        type[group2]= "FOUR_LEVEL",
        symbols[Group1]= [               2,              at ],
        symbols[Group2]= [          eacute,               2,      asciitilde,        NoSymbol ]
    };
    key <AE03> {
        type[group2]= "FOUR_LEVEL",
        symbols[Group1]= [               3,      numbersign ],
        symbols[Group2]= [        quotedbl,               3,      numbersign,        NoSymbol ]
    };
    key <AE04> {
        type[group2]= "FOUR_LEVEL",
        symbols[Group1]= [               4,          dollar ],
        symbols[Group2]= [      apostrophe,               4,       braceleft,        NoSymbol ]
    };
    key <AE05> {
        type[group2]= "FOUR_LEVEL",
        symbols[Group1]= [               5,         percent ],
        symbols[Group2]= [       parenleft,               5,     bracketleft,        NoSymbol ]
    };
    key <AE06> {
        type[group2]= "FOUR_LEVEL",
        symbols[Group1]= [               6,     asciicircum ],
        symbols[Group2]= [           minus,               6,             bar,        NoSymbol ]
    };
    key <AE07> {
        type[group2]= "FOUR_LEVEL",
        symbols[Group1]= [               7,       ampersand ],
        symbols[Group2]= [          egrave,               7,           grave,        NoSymbol ]
    };
    key <AE08> {
        type[group2]= "FOUR_LEVEL",
        symbols[Group1]= [               8,        asterisk ],
        symbols[Group2]= [      underscore,               8,       backslash,        NoSymbol ]
    };
    key <AE09> {
        type[group2]= "FOUR_LEVEL",
        symbols[Group1]= [               9,       parenleft ],
        symbols[Group2]= [        ccedilla,               9,     asciicircum,        NoSymbol ]
    };
    key <AE10> {
        type[group2]= "FOUR_LEVEL",
        symbols[Group1]= [               0,      parenright ],
        symbols[Group2]= [          agrave,               0,              at,        NoSymbol ]
    };
    key <AE11> {
        type[group2]= "FOUR_LEVEL",
        symbols[Group1]= [           minus,      underscore ],
        symbols[Group2]= [      parenright,          degree,    bracketright,        NoSymbol ]
    };
    key <AE12> {
        type[group2]= "FOUR_LEVEL",
        symbols[Group1]= [           equal,            plus ],
        symbols[Group2]= [           equal,            plus,      braceright,        NoSymbol ]
    };
    key <BKSP> {         [       BackSpace ] };
    key  <TAB> {         [             Tab,    ISO_Left_Tab ] };
    key <AD01> {
        type= "ALPHABETIC",
        symbols[Group1]= [               q,               Q ],
        symbols[Group2]= [               a,               A ]
    };
    key <AD02> {
        type= "ALPHABETIC",
        symbols[Group1]= [               w,               W ],
        symbols[Group2]= [               z,               Z ]
    };
    key <AD03> {
        type[group1]= "ALPHABETIC",
        type[group2]= "FOUR_LEVEL_SEMIALPHABETIC",
        symbols[Group1]= [               e,               E ],
        symbols[Group2]= [               e,               E,        EuroSign,        NoSymbol ]
    };
    key <AD04> {
        type= "ALPHABETIC",
        symbols[Group1]= [               r,               R ]
    };
    key <AD05> {
        type= "ALPHABETIC",
        symbols[Group1]= [               t,               T ]
    };
    key <AD06> {
        type= "ALPHABETIC",
        symbols[Group1]= [               y,               Y ]
    };
    key <AD07> {
        type= "ALPHABETIC",
        symbols[Group1]= [               u,               U ]
    };
    key <AD08> {
        type= "ALPHABETIC",
        symbols[Group1]= [               i,               I ]
    };
    key <AD09> {
        type= "ALPHABETIC",
        symbols[Group1]= [               o,               O ]
    };
    key <AD10> {
        type= "ALPHABETIC",
        symbols[Group1]= [               p,               P ]
    };
    key <AD11> {
        symbols[Group1]= [     bracketleft,       braceleft ],
        symbols[Group2]= [ dead_circumflex,  dead_diaeresis ]
    };
    key <AD12> {
        type[group2]= "FOUR_LEVEL",
        symbols[Group1]= [    bracketright,      braceright ],
        symbols[Group2]= [          dollar,        sterling,        currency,        NoSymbol ]
    };
    key <RTRN> {         [          Return ] };
    key <LCTL> {         [       Control_L ] };
    key <AC01> {
        type= "ALPHABETIC",
        symbols[Group1]= [               a,               A ],
        symbols[Group2]= [               q,               Q ]
    };
    key <AC02> {
        type= "ALPHABETIC",
        symbols[Group1]= [               s,               S ]
    };
    key <AC03> {
        type= "ALPHABETIC",
        symbols[Group1]= [               d,               D ]
    };
    key <AC04> {
        type= "ALPHABETIC",
        symbols[Group1]= [               f,               F ]
    };
    key <AC05> {
        type= "ALPHABETIC",
        symbols[Group1]= [               g,               G ]
    };
    key <AC06> {
        type= "ALPHABETIC",
        symbols[Group1]= [               h,               H ]
    };
    key <AC07> {
        type= "ALPHABETIC",
        symbols[Group1]= [               j,               J ]
    };
    key <AC08> {
        type= "ALPHABETIC",
        symbols[Group1]= [               k,               K ]
    };
    key <AC09> {
        type= "ALPHABETIC",
        symbols[Group1]= [               l,               L ]
    };
    key <AC10> {
        type[group2]= "ALPHABETIC",
        symbols[Group1]= [       semicolon,           colon ],
        symbols[Group2]= [               m,               M ]
    };
    key <AC11> {
        symbols[Group1]= [      apostrophe,        quotedbl ],
        symbols[Group2]= [          ugrave,         percent ]
    };
    key <TLDE> {
        symbols[Group1]= [           grave,      asciitilde ],
        symbols[Group2]= [     twosuperior ]
    };
    key <LFSH> {         [         Shift_L ] };
    key <BKSL> {
        symbols[Group1]= [       backslash,             bar ],
        symbols[Group2]= [        asterisk,              mu ]
    };
    key <AB01> {
        type= "ALPHABETIC",
        symbols[Group1]= [               z,               Z ],
        symbols[Group2]= [               w,               W ]
    };
    key <AB02> {
        type= "ALPHABETIC",
        symbols[Group1]= [               x,               X ]
    };
    key <AB03> {
        type= "ALPHABETIC",
        symbols[Group1]= [               c,               C ]
    };
    key <AB04> {
        type= "ALPHABETIC",
        symbols[Group1]= [               v,               V ]
    };
    key <AB05> {
        type= "ALPHABETIC",
        symbols[Group1]= [               b,               B ]
    };
    key <AB06> {
        type= "ALPHABETIC",
        symbols[Group1]= [               n,               N ]
    };
    key <AB07> {
        type[group1]= "ALPHABETIC",
        symbols[Group1]= [               m,               M ],
        symbols[Group2]= [           comma,        question ]
    };
    key <AB08> {
        symbols[Group1]= [           comma,            less ],
        symbols[Group2]= [       semicolon,          period ]
    };
    key <AB09> {
        symbols[Group1]= [          period,         greater ],
        symbols[Group2]= [           colon,           slash ]
    };
    key <AB10> {
        symbols[Group1]= [           slash,        question ],
        symbols[Group2]= [          exclam,         section ]
    };
    key <RTSH> {         [         Shift_R ] };
    key <KPMU> {         [     KP_Multiply ] };
    key <LALT> {         [           Alt_L ] };
    key <SPCE> {         [           space ] };
    key <CAPS> {         [       Caps_Lock ] };
    key <FK01> {         [              F1 ] };
    key <FK02> {         [              F2 ] };
    key <FK03> {         [              F3 ] };
    key <FK04> {         [              F4 ] };
    key <FK05> {         [              F5 ] };
    key <FK06> {         [              F6 ] };
    key <FK07> {         [              F7 ] };
    key <FK08> {         [              F8 ] };
    key <FK09> {         [              F9 ] };
    key <FK10> {         [             F10 ] };
    key <NMLK> {         [        Num_Lock ] };
    key <SCLK> {         [     Scroll_Lock ] };
    key  <KP7> {         [         KP_Home,            KP_7 ] };
    key  <KP8> {         [           KP_Up,            KP_8 ] };
    key  <KP9> {         [        KP_Prior,            KP_9 ] };
    key <KPSU> {         [     KP_Subtract ] };
    key  <KP4> {         [         KP_Left,            KP_4 ] };
    key  <KP5> {         [        KP_Begin,            KP_5 ] };
    key  <KP6> {         [        KP_Right,            KP_6 ] };
    key <KPAD> {         [          KP_Add ] };
    key  <KP1> {         [          KP_End,            KP_1 ] };
    key  <KP2> {         [         KP_Down,            KP_2 ] };
    key  <KP3> {         [         KP_Next,            KP_3 ] };
    key  <KP0> {         [       KP_Insert,            KP_0 ] };
    key <KPDL> {         [       KP_Delete,      KP_Decimal ] };
    key <FK11> {         [             F11 ] };
    key <FK12> {         [             F12 ] };
    key <KPEN> {         [        KP_Enter ] };
    key <RCTL> {         [       Control_R ] };
    key <KPDV> {         [       KP_Divide ] };
    key <PRSC> {         [           Print ] };
    key <RALT> {
        symbols[Group1]= [           Alt_R ],
        symbols[Group2]= [ ISO_Level3_Shift ]
    };
    key <HOME> {         [            Home ] };
    key   <UP> {         [              Up ] };
    key <PGUP> {         [           Prior ] };
    key <LEFT> {         [            Left ] };
    key <RGHT> {         [           Right ] };
    key  <END> {         [             End ] };
    key <DOWN> {         [            Down ] };
    key <PGDN> {         [            Next ] };
    key  <INS> {         [          Insert ] };
    key <DELE> {         [          Delete ] };
    key <PAUS> {         [           Pause ] };
    key <LWIN> {         [         Super_L ] };
    key <RWIN> {         [         Super_R ] };
    key <MENU> {         [            Menu ] };
};

};
